name: Deploying a CI/CD for .NET Hello World app in ASP.NET 4.7 using GitHub Actions and store artifacts in Amazon S3 for Production in Active/Passive mode

on:
  push:
    # branches: [ sprint-* ]
  pull_request:
   types: [opened, synchronize]


env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }} 
  GIT_CONFIG_EMAIL: ${{ secrets.GIT_CONFIG_EMAIL }}
  GIT_CONFIG_USERNAME: ${{ secrets.GIT_CONFIG_USERNAME }}
 
  
jobs:
  build:
    runs-on: windows-latest
    environment: production
    defaults:
      run:
        shell: cmd
        
    env:
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      BUILD_PATH: ${{ vars.BUILD_PATH }}
      MODE1: ${{ vars.MODE1 }}
      MODE2: ${{ vars.MODE2 }}

    steps:
      - name: Check Branch Name
        shell: powershell
        run: |
          $branch_name = "${{ github.ref }}"
          Write-Host $branch_name
          if ($branch_name -match "^refs/heads/sprint-.*") {
            Write-Host "Deploying to dev environment for branch: $branch_name"
          } else {
            Write-Host "Skipping dev deployment for branch: $branch_name"
            exit 78
          }
      
      - name: Check PR name
        shell: powershell
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          if ($env:TITLE -like '*-build') {
            Write-Output "PR title has 'build' appended"
            exit 0
          } else {
              Write-Output "PR title does not have 'build' appended"
              exit 1
          }

      - name: Checkout code repository
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore Packages
        run: nuget restore HelloWorldSampleApp.sln

      - name: Build solution
        run: msbuild HelloWorldSampleApp.sln /p:Configuration=Release /p:DeployOnBuild=true
      
      - name: Git config
        shell: powershell
        run: |
          git config --global user.email "${{ env.GIT_CONFIG_EMAIL }}"
          git config --global user.name "${{ env.GIT_CONFIG_USERNAME }}"
     
      - name: Determine next version v2
        run: .\tag_release_main.ps1
        shell: pwsh
      
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
       
      - name: Upload artifacts to Amazon S3
        shell: powershell
        run: |
          aws s3 cp ${{ env.BUILD_PATH }} s3://${{ env.S3_BUCKET_NAME }}/${{ env.ENVIRONMENT }}/hello-world-sample-app/${{ env.MODE1 }}/
          aws s3 cp release.txt s3://${{ env.S3_BUCKET_NAME }}/${{ env.ENVIRONMENT }}/hello-world-sample-app/${{ env.MODE1 }}/
          aws s3 cp ${{ env.BUILD_PATH }} s3://${{ env.S3_BUCKET_NAME }}/${{ env.ENVIRONMENT }}/hello-world-sample-app/${{ env.MODE2 }}/
          aws s3 cp release.txt s3://${{ env.S3_BUCKET_NAME }}/${{ env.ENVIRONMENT }}/hello-world-sample-app/${{ env.MODE2 }}/
