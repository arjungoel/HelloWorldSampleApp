name: "Deploying a CI/CD for .NET Hello World Sample App in ASP.NET 4.7 using GitHub Actions and store artifacts in Amazon S3"

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master"]

env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
 
  
jobs:
      build:
           runs-on: windows-latest
           environment: master
           defaults:
             run:
               shell: cmd

           env:
            BUILD: ${{ secrets.BUILD }}
            FOLDER_NAME: ${{ secrets.FOLDER_NAME }}

           steps:
            - name: Checkout code repository
              uses: actions/checkout@v3
      
            - name: Setup MSBuild
              uses: microsoft/setup-msbuild@v1

            - name: Setup NuGet
              uses: NuGet/setup-nuget@v1.0.5

            - name: Restore Packages
              run: nuget restore HelloWorldSampleApp.sln

            - name: Build solution
              run: msbuild HelloWorldSampleApp.sln /p:Configuration=Release /p:DeployOnBuild=true
              
            - name: Set AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}
            
            - name: Retrieve Commit SHA for the build
              shell: powershell
              run: |
                $output = git rev-parse --short=4 HEAD
                echo $output
                echo $output > commit_sha.txt
                
            - name: Upload artifacts to Amazon S3
              shell: powershell
              run: |
                aws s3 cp ${{ env.BUILD }} s3://${{ env.S3_BUCKET_NAME }}/${{ env.FOLDER_NAME }}/web-app/
                aws s3 cp commit_sha.txt s3://${{ env.S3_BUCKET_NAME }}/${{ env.FOLDER_NAME }}/web-app/

      deploy:
       needs: build
       runs-on: [ self-hosted, Windows, X64 ]
       environment: master
       defaults:
         run:
           shell: cmd
       env:
         RUNNER_WORK_LOCATION: ${{ secrets.RUNNER_WORK_LOCATION }}
         IIS_FOLDER: ${{ secrets.IIS_FOLDER }}
         FOLDER_NAME: ${{ secrets.FOLDER_NAME }}
         EXTRACTED_ZIP_LOCATION: ${{ secrets.EXTRACTED_ZIP_LOCATION }}
            
       steps:
           - name: Set AWS credentials
             uses: aws-actions/configure-aws-credentials@v1
             with:
               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
               aws-region: ${{ secrets.AWS_REGION }}
               
           - name: To check if AWS CLI V2 is installed or not
             shell: powershell
             run: |
               if (-Not (Test-Path 'C:\Program Files\Amazon\AWSCLI\aws.exe')) {
                Write-Host "AWS CLI is not installed. Installing..."
                $awsCliInstallerUrl = "https://awscli.amazonaws.com/AWSCLIV2.msi"
                $awsCliInstallerPath = Join-Path $env:TEMP "AWSCLIV2.msi"
                Invoke-WebRequest -Uri $awsCliInstallerUrl -OutFile $awsCliInstallerPath
                Start-Process -Wait -FilePath "msiexec.exe" -ArgumentList "/i", $awsCliInstallerPath, "/quiet"
                } else {
                  Write-Host "AWS CLI is already installed."
                }
                
           - name: Check the AWS CLI version V2
             shell: cmd
             run: |
              cd C:\
              aws --version
               
           - name: Download the zip file from S3 to EC2 folder
             shell: powershell
             run: aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/${{ env.FOLDER_NAME }}/web-app/HelloWorldSampleApp.zip ${{ env.RUNNER_WORK_LOCATION }}
                
           - name: Unzipping the Zip file
             shell: powershell
             run: Expand-Archive -Path ${{ env.RUNNER_WORK_LOCATION }}\HelloWorldSampleApp.zip -DestinationPath ${{ env.RUNNER_WORK_LOCATION }}\output
        
           - name: Deploy to IIS Server
             shell: powershell
             run: |
              iisreset /stop
              Copy-Item -Path "${{ env.RUNNER_WORK_LOCATION }}\output\${{ env.EXTRACTED_ZIP_LOCATION }}\*" -Destination ${{ env.IIS_FOLDER }} -Recurse -Force
              iisreset /start
          
           - name: Download the Commit SHA file from S3 bucket to EC2 location and rename the artifacts file in S3 bucket
             shell: powershell
             run: |
              aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/${{ env.FOLDER_NAME }}/web-app/commit_sha.txt ${{ env.RUNNER_WORK_LOCATION }}
              $output = cat ${{ env.RUNNER_WORK_LOCATION }}\commit_sha.txt
              aws s3 mv s3://${{ env.S3_BUCKET_NAME }}/${{ env.FOLDER_NAME }}/web-app/HelloWorldSampleApp.zip s3://${{ env.S3_BUCKET_NAME }}/${{ env.FOLDER_NAME }}/web-app/HelloWorldSampleApp-$output.zip
                
           - name: Delete the unzipped output folder & zipped file to allow new builds gracefully
             shell: powershell
             run: |
              Remove-Item ${{ env.RUNNER_WORK_LOCATION }}\output -Recurse
              Remove-Item ${{ env.RUNNER_WORK_LOCATION }}\HelloWorldSampleApp.zip
            
           - name: Delete the Commit SHA file from S3 bucket and EC2 location 
             shell: powershell
             run: |
              aws s3 rm s3://${{ env.S3_BUCKET_NAME }}/${{ env.FOLDER_NAME }}/web-app/commit_sha.txt    
              Remove-Item ${{ env.RUNNER_WORK_LOCATION }}\commit_sha.txt
