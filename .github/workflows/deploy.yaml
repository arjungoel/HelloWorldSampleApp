name: "Deploying a CI/CD for .NET sample app in ASP.NET 4.7 using GitHub Actions and store artifacts in Amazon S3"

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  ZIP_DOWNLOAD_LOCATION: ${{ secrets.ZIP_DOWNLOAD_LOCATION }}
  UNZIPPED_FOLDER_NAME: ${{ secrets.UNZIPPED_FOLDER_NAME }}
  DESTINATION: ${{ secrets.DESTINATION }}
  IIS_FOLDER: ${{ secrets.IIS_FOLDER }}
  
jobs:
   build:
        runs-on: windows-latest
        defaults:
          run:
            shell: cmd

        steps:
        - name: Checkout code repository
          uses: actions/checkout@v3
      
        - name: Setup MSBuild
          uses: microsoft/setup-msbuild@v1

        - name: Setup NuGet
          uses: NuGet/setup-nuget@v1.0.5

        - name: Restore Packages
          run: nuget restore HelloWorldSampleApp.sln

        - name: Build solution
          run: msbuild HelloWorldSampleApp.sln /p:Configuration=Release /p:DeployOnBuild=true

        - name: Set AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Get Git commit SHA and upload artifacts to Amazon S3
          shell: powershell
          env:
            BUILD: ${{ secrets.BUILD }}
          run: |
            $output = git rev-parse --short=4 HEAD
            $currentTime = Get-Date -Format "yyyyMMddHHmmss"
            aws s3 cp ${{ env.BUILD }} s3://${{ env.S3_BUCKET_NAME }}/$currentTime/$output/
            aws s3 cp ${{ env.BUILD }} s3://${{ env.S3_BUCKET_NAME }}/
            

   deploy:
     needs: build
     runs-on: [ self-hosted, Windows, X64 ]
     defaults:
       run:
         shell: cmd
    
     steps:
       - name: Set AWS credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ secrets.AWS_REGION }}
     
       # - name: Delete the unzipped folder & wwwroot folder to allow new builds gracefully
       #   shell: powershell
       #   run: |
       #     Remove-Item ${{ env.DESTINATION }} -Recurse
       #     Remove-Item -Recurse ${{ env.IIS_FOLDER }}\* 
           
       - name: Download the zip file from S3 to EC2 folder
         shell: powershell
         run: C:\"Program Files"\Amazon\AWSCLIV2\aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/$currentTime/$output/ ${{ env.ZIP_DOWNLOAD_LOCATION }}
         
       # - name: Unzipping the Zip file
       #   shell: powershell
       #   run: |
       #     Expand-Archive -Path ${{ env.ZIP_DOWNLOAD_LOCATION }}\HelloWorldSampleApp.zip -DestinationPath ${{ env.DESTINATION }}
        
       # - name: Deploy to IIS Server
       #   shell: powershell
       #   env:
       #     COPY_LOCATION: ${{ secrets.COPY_LOCATION }}
       #   run: |
       #     Start-Process powershell -ArgumentList "iisreset /stop" -Verb RunAs
       #     Copy-Item -Path ${{ env.COPY_LOCATION }}\* -Destination ${{ env.IIS_FOLDER }} -Recurse -Force
       #     Start-Process powershell -ArgumentList "iisreset /start" -Verb RunAs
